{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import * as utils from \"./utils.js\";\n  const api = \"https://api.youtubeconnect.ameyathakur.com\";\n  let connected = false;\n  let state;\n  let mnemonicBuffer = \"\";\n  let token = window.location.hash.substr(1);\n  let timer;\n\n  $: if (state) {\n    debounce(pushUpdate, 15);\n  }\n\n  $: if (token !== \"\") {\n    console.log(\"running fetch\");\n    console.log(token);\n    fetch(api + \"/get/\" + token)\n      .then(response => {\n        if (response.status !== 200) {\n          connected = false;\n          state = null;\n          token = \"\";\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n\n        // Examine the text in the response\n        response.json().then(data => {\n          state = data;\n          connected = true;\n        });\n      })\n      .catch(err => {\n        connected = false;\n        state = null;\n        console.log(\"Fetch Error : \", err);\n        return;\n      });\n  }\n\n  const pushUpdate = () => {\n    fetch(api + \"/update/\" + token, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(state)\n    })\n      .then(response => {\n        if (response.status !== 200) {\n          connected = false;\n          state = null;\n          token = \"\";\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n      })\n      .catch(err => {\n        connected = false;\n        state = null;\n        token = \"\";\n        console.log(\"Fetch Error : \", err);\n        return;\n      });\n\n    if (state && state.action !== -1) {\n      state.action = -1;\n    }\n  };\n\n  const processMnemonic = () => {\n    var b64 = utils.demnemonic(mnemonicBuffer);\n    if (b64 != \"\") {\n      token = b64;\n    }\n  };\n\n  const handleKeydown = e => {\n    if (e.keyCode === 13) {\n      processMnemonic();\n    }\n  };\n\n  const updateHashToken = () => {\n    var temp = window.location.hash.substr(1);\n    if (temp.length < 16) {\n      token = temp + \"=\";\n    }\n  };\n\n  const playpause = () => {\n    state.paused === true ? (state.paused = false) : (state.paused = true);\n  };\n\n  const mute = () => {\n    state.mute === true ? (state.mute = false) : (state.mute = true);\n  };\n\n  const next = () => {\n    state.action = 1;\n  };\n\n  const prev = () => {\n    state.action = 0;\n  };\n\n  const skipbackward = () => {\n    state.action = 2;\n  };\n\n  const skipforward = () => {\n    state.action = 3;\n  };\n\n  const debounce = (func, delay) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func();\n    }, delay);\n  };\n</script>\n\n<style>\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown} on:hashchange={updateHashToken} />\n\n<main class=\"container\">\n  <div class=\"header\">\n    <a href=\"https://youtubeconnect.ameyathakur.com/\">Youtube Connect</a>\n    <a href=\"https://youtubeconnect.ameyathakur.com/\">Extension</a>\n  </div>\n  <div style=\"height: 25vh\" />\n  <div class=\"content\">\n    {#if !connected}\n      <input\n        class=\"long-input\"\n        bind:value={mnemonicBuffer}\n        type=\"text\"\n        placeholder=\"Eight word mnemonic\" />\n      <button on:click={processMnemonic}>Connect</button>\n    {/if}\n\n    {#if connected}\n      <div class=\"panel\">\n        <div class=\"controls\">\n          <button on:click={skipbackward}>Skip -10</button>\n\n          <button on:click={playpause}>Play/Pause</button>\n          <button on:click={skipforward}>Skip +30</button>\n\n        </div>\n        <div class=\"controls\">\n          <button on:click={mute}>Mute</button>\n          <input type=\"range\" bind:value={state.volume} min=\"0\" max=\"100\" />\n        </div>\n\n        <div\n          style=\"display: flex; flex-direction: row; justify-content:\n          space-between;\">\n          <button on:click={prev}>Previous</button>\n          <button on:click={next}>Next</button>\n        </div>\n      </div>\n    {/if}\n  </div>\n</main>\n"
  ],
  "names": [],
  "mappings": "AA+HE,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC"
}