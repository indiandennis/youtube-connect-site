{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/wordlist.js","../../src/App.svelte","../../src/utils.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const wordlist = [\r\n  'abandon',\r\n  'ability',\r\n  'able',\r\n  'about',\r\n  'above',\r\n  'absent',\r\n  'absorb',\r\n  'abstract',\r\n  'absurd',\r\n  'abuse',\r\n  'access',\r\n  'accident',\r\n  'account',\r\n  'accuse',\r\n  'achieve',\r\n  'acid',\r\n  'acoustic',\r\n  'acquire',\r\n  'across',\r\n  'act',\r\n  'action',\r\n  'actor',\r\n  'actress',\r\n  'actual',\r\n  'adapt',\r\n  'add',\r\n  'addict',\r\n  'address',\r\n  'adjust',\r\n  'admit',\r\n  'adult',\r\n  'advance',\r\n  'advice',\r\n  'aerobic',\r\n  'affair',\r\n  'afford',\r\n  'afraid',\r\n  'again',\r\n  'age',\r\n  'agent',\r\n  'agree',\r\n  'ahead',\r\n  'aim',\r\n  'air',\r\n  'airport',\r\n  'aisle',\r\n  'alarm',\r\n  'album',\r\n  'alcohol',\r\n  'alert',\r\n  'alien',\r\n  'all',\r\n  'alley',\r\n  'allow',\r\n  'almost',\r\n  'alone',\r\n  'alpha',\r\n  'already',\r\n  'also',\r\n  'alter',\r\n  'always',\r\n  'amateur',\r\n  'amazing',\r\n  'among',\r\n  'amount',\r\n  'amused',\r\n  'analyst',\r\n  'anchor',\r\n  'ancient',\r\n  'anger',\r\n  'angle',\r\n  'angry',\r\n  'animal',\r\n  'ankle',\r\n  'announce',\r\n  'annual',\r\n  'another',\r\n  'answer',\r\n  'antenna',\r\n  'antique',\r\n  'anxiety',\r\n  'any',\r\n  'apart',\r\n  'apology',\r\n  'appear',\r\n  'apple',\r\n  'approve',\r\n  'april',\r\n  'arch',\r\n  'arctic',\r\n  'area',\r\n  'arena',\r\n  'argue',\r\n  'arm',\r\n  'armed',\r\n  'armor',\r\n  'army',\r\n  'around',\r\n  'arrange',\r\n  'arrest',\r\n  'arrive',\r\n  'arrow',\r\n  'art',\r\n  'artefact',\r\n  'artist',\r\n  'artwork',\r\n  'ask',\r\n  'aspect',\r\n  'assault',\r\n  'asset',\r\n  'assist',\r\n  'assume',\r\n  'asthma',\r\n  'athlete',\r\n  'atom',\r\n  'attack',\r\n  'attend',\r\n  'attitude',\r\n  'attract',\r\n  'auction',\r\n  'audit',\r\n  'august',\r\n  'aunt',\r\n  'author',\r\n  'auto',\r\n  'autumn',\r\n  'average',\r\n  'avocado',\r\n  'avoid',\r\n  'awake',\r\n  'aware',\r\n  'away',\r\n  'awesome',\r\n  'awful',\r\n  'awkward',\r\n  'axis',\r\n  'baby',\r\n  'bachelor',\r\n  'bacon',\r\n  'badge',\r\n  'bag',\r\n  'balance',\r\n  'balcony',\r\n  'ball',\r\n  'bamboo',\r\n  'banana',\r\n  'banner',\r\n  'bar',\r\n  'barely',\r\n  'bargain',\r\n  'barrel',\r\n  'base',\r\n  'basic',\r\n  'basket',\r\n  'battle',\r\n  'beach',\r\n  'bean',\r\n  'beauty',\r\n  'because',\r\n  'become',\r\n  'beef',\r\n  'before',\r\n  'begin',\r\n  'behave',\r\n  'behind',\r\n  'believe',\r\n  'below',\r\n  'belt',\r\n  'bench',\r\n  'benefit',\r\n  'best',\r\n  'betray',\r\n  'better',\r\n  'between',\r\n  'beyond',\r\n  'bicycle',\r\n  'bid',\r\n  'bike',\r\n  'bind',\r\n  'biology',\r\n  'bird',\r\n  'birth',\r\n  'bitter',\r\n  'black',\r\n  'blade',\r\n  'blame',\r\n  'blanket',\r\n  'blast',\r\n  'bleak',\r\n  'bless',\r\n  'blind',\r\n  'blood',\r\n  'blossom',\r\n  'blouse',\r\n  'blue',\r\n  'blur',\r\n  'blush',\r\n  'board',\r\n  'boat',\r\n  'body',\r\n  'boil',\r\n  'bomb',\r\n  'bone',\r\n  'bonus',\r\n  'book',\r\n  'boost',\r\n  'border',\r\n  'boring',\r\n  'borrow',\r\n  'boss',\r\n  'bottom',\r\n  'bounce',\r\n  'box',\r\n  'boy',\r\n  'bracket',\r\n  'brain',\r\n  'brand',\r\n  'brass',\r\n  'brave',\r\n  'bread',\r\n  'breeze',\r\n  'brick',\r\n  'bridge',\r\n  'brief',\r\n  'bright',\r\n  'bring',\r\n  'brisk',\r\n  'broccoli',\r\n  'broken',\r\n  'bronze',\r\n  'broom',\r\n  'brother',\r\n  'brown',\r\n  'brush',\r\n  'bubble',\r\n  'buddy',\r\n  'budget',\r\n  'buffalo',\r\n  'build',\r\n  'bulb',\r\n  'bulk',\r\n  'bullet',\r\n  'bundle',\r\n  'bunker',\r\n  'burden',\r\n  'burger',\r\n  'burst',\r\n  'bus',\r\n  'business',\r\n  'busy',\r\n  'butter',\r\n  'buyer',\r\n  'buzz',\r\n  'cabbage',\r\n  'cabin',\r\n  'cable',\r\n  'cactus',\r\n  'cage',\r\n  'cake',\r\n  'call',\r\n  'calm',\r\n  'camera',\r\n  'camp',\r\n  'can',\r\n  'canal',\r\n  'cancel',\r\n  'candy',\r\n  'cannon',\r\n  'canoe',\r\n  'canvas',\r\n  'canyon',\r\n  'capable',\r\n  'capital',\r\n  'captain',\r\n  'car',\r\n  'carbon',\r\n  'card',\r\n  'cargo',\r\n  'carpet',\r\n  'carry',\r\n  'cart',\r\n  'case',\r\n  'cash',\r\n  'casino',\r\n  'castle',\r\n  'casual',\r\n  'cat',\r\n  'catalog',\r\n  'catch',\r\n  'category',\r\n  'cattle',\r\n  'caught',\r\n  'cause',\r\n  'caution',\r\n  'cave',\r\n  'ceiling',\r\n  'celery',\r\n  'cement',\r\n  'census',\r\n  'century',\r\n  'cereal',\r\n  'certain',\r\n  'chair',\r\n  'chalk',\r\n  'champion',\r\n  'change',\r\n  'chaos',\r\n  'chapter',\r\n  'charge',\r\n  'chase',\r\n  'chat',\r\n  'cheap',\r\n  'check',\r\n  'cheese',\r\n  'chef',\r\n  'cherry',\r\n  'chest',\r\n  'chicken',\r\n  'chief',\r\n  'child',\r\n  'chimney',\r\n  'choice',\r\n  'choose',\r\n  'chronic',\r\n  'chuckle',\r\n  'chunk',\r\n  'churn',\r\n  'cigar',\r\n  'cinnamon',\r\n  'circle',\r\n  'citizen',\r\n  'city',\r\n  'civil',\r\n  'claim',\r\n  'clap',\r\n  'clarify',\r\n  'claw',\r\n  'clay',\r\n  'clean',\r\n  'clerk',\r\n  'clever',\r\n  'click',\r\n  'client',\r\n  'cliff',\r\n  'climb',\r\n  'clinic',\r\n  'clip',\r\n  'clock',\r\n  'clog',\r\n  'close',\r\n  'cloth',\r\n  'cloud',\r\n  'clown',\r\n  'club',\r\n  'clump',\r\n  'cluster',\r\n  'clutch',\r\n  'coach',\r\n  'coast',\r\n  'coconut',\r\n  'code',\r\n  'coffee',\r\n  'coil',\r\n  'coin',\r\n  'collect',\r\n  'color',\r\n  'column',\r\n  'combine',\r\n  'come',\r\n  'comfort',\r\n  'comic',\r\n  'common',\r\n  'company',\r\n  'concert',\r\n  'conduct',\r\n  'confirm',\r\n  'congress',\r\n  'connect',\r\n  'consider',\r\n  'control',\r\n  'convince',\r\n  'cook',\r\n  'cool',\r\n  'copper',\r\n  'copy',\r\n  'coral',\r\n  'core',\r\n  'corn',\r\n  'correct',\r\n  'cost',\r\n  'cotton',\r\n  'couch',\r\n  'country',\r\n  'couple',\r\n  'course',\r\n  'cousin',\r\n  'cover',\r\n  'coyote',\r\n  'crack',\r\n  'cradle',\r\n  'craft',\r\n  'cram',\r\n  'crane',\r\n  'crash',\r\n  'crater',\r\n  'crawl',\r\n  'crazy',\r\n  'cream',\r\n  'credit',\r\n  'creek',\r\n  'crew',\r\n  'cricket',\r\n  'crime',\r\n  'crisp',\r\n  'critic',\r\n  'crop',\r\n  'cross',\r\n  'crouch',\r\n  'crowd',\r\n  'crucial',\r\n  'cruel',\r\n  'cruise',\r\n  'crumble',\r\n  'crunch',\r\n  'crush',\r\n  'cry',\r\n  'crystal',\r\n  'cube',\r\n  'culture',\r\n  'cup',\r\n  'cupboard',\r\n  'curious',\r\n  'current',\r\n  'curtain',\r\n  'curve',\r\n  'cushion',\r\n  'custom',\r\n  'cute',\r\n  'cycle',\r\n  'dad',\r\n  'damage',\r\n  'damp',\r\n  'dance',\r\n  'danger',\r\n  'daring',\r\n  'dash',\r\n  'daughter',\r\n  'dawn',\r\n  'day',\r\n  'deal',\r\n  'debate',\r\n  'debris',\r\n  'decade',\r\n  'december',\r\n  'decide',\r\n  'decline',\r\n  'decorate',\r\n  'decrease',\r\n  'deer',\r\n  'defense',\r\n  'define',\r\n  'defy',\r\n  'degree',\r\n  'delay',\r\n  'deliver',\r\n  'demand',\r\n  'demise',\r\n  'denial',\r\n  'dentist',\r\n  'deny',\r\n  'depart',\r\n  'depend',\r\n  'deposit',\r\n  'depth',\r\n  'deputy',\r\n  'derive',\r\n  'describe',\r\n  'desert',\r\n  'design',\r\n  'desk',\r\n  'despair',\r\n  'destroy',\r\n  'detail',\r\n  'detect',\r\n  'develop',\r\n  'device',\r\n  'devote',\r\n  'diagram',\r\n  'dial',\r\n  'diamond',\r\n  'diary',\r\n  'dice',\r\n  'diesel',\r\n  'diet',\r\n  'differ',\r\n  'digital',\r\n  'dignity',\r\n  'dilemma',\r\n  'dinner',\r\n  'dinosaur',\r\n  'direct',\r\n  'dirt',\r\n  'disagree',\r\n  'discover',\r\n  'disease',\r\n  'dish',\r\n  'dismiss',\r\n  'disorder',\r\n  'display',\r\n  'distance',\r\n  'divert',\r\n  'divide',\r\n  'divorce',\r\n  'dizzy',\r\n  'doctor',\r\n  'document',\r\n  'dog',\r\n  'doll',\r\n  'dolphin',\r\n  'domain',\r\n  'donate',\r\n  'donkey',\r\n  'donor',\r\n  'door',\r\n  'dose',\r\n  'double',\r\n  'dove',\r\n  'draft',\r\n  'dragon',\r\n  'drama',\r\n  'drastic',\r\n  'draw',\r\n  'dream',\r\n  'dress',\r\n  'drift',\r\n  'drill',\r\n  'drink',\r\n  'drip',\r\n  'drive',\r\n  'drop',\r\n  'drum',\r\n  'dry',\r\n  'duck',\r\n  'dumb',\r\n  'dune',\r\n  'during',\r\n  'dust',\r\n  'dutch',\r\n  'duty',\r\n  'dwarf',\r\n  'dynamic',\r\n  'eager',\r\n  'eagle',\r\n  'early',\r\n  'earn',\r\n  'earth',\r\n  'easily',\r\n  'east',\r\n  'easy',\r\n  'echo',\r\n  'ecology',\r\n  'economy',\r\n  'edge',\r\n  'edit',\r\n  'educate',\r\n  'effort',\r\n  'egg',\r\n  'eight',\r\n  'either',\r\n  'elbow',\r\n  'elder',\r\n  'electric',\r\n  'elegant',\r\n  'element',\r\n  'elephant',\r\n  'elevator',\r\n  'elite',\r\n  'else',\r\n  'embark',\r\n  'embody',\r\n  'embrace',\r\n  'emerge',\r\n  'emotion',\r\n  'employ',\r\n  'empower',\r\n  'empty',\r\n  'enable',\r\n  'enact',\r\n  'end',\r\n  'endless',\r\n  'endorse',\r\n  'enemy',\r\n  'energy',\r\n  'enforce',\r\n  'engage',\r\n  'engine',\r\n  'enhance',\r\n  'enjoy',\r\n  'enlist',\r\n  'enough',\r\n  'enrich',\r\n  'enroll',\r\n  'ensure',\r\n  'enter',\r\n  'entire',\r\n  'entry',\r\n  'envelope',\r\n  'episode',\r\n  'equal',\r\n  'equip',\r\n  'era',\r\n  'erase',\r\n  'erode',\r\n  'erosion',\r\n  'error',\r\n  'erupt',\r\n  'escape',\r\n  'essay',\r\n  'essence',\r\n  'estate',\r\n  'eternal',\r\n  'ethics',\r\n  'evidence',\r\n  'evil',\r\n  'evoke',\r\n  'evolve',\r\n  'exact',\r\n  'example',\r\n  'excess',\r\n  'exchange',\r\n  'excite',\r\n  'exclude',\r\n  'excuse',\r\n  'execute',\r\n  'exercise',\r\n  'exhaust',\r\n  'exhibit',\r\n  'exile',\r\n  'exist',\r\n  'exit',\r\n  'exotic',\r\n  'expand',\r\n  'expect',\r\n  'expire',\r\n  'explain',\r\n  'expose',\r\n  'express',\r\n  'extend',\r\n  'extra',\r\n  'eye',\r\n  'eyebrow',\r\n  'fabric',\r\n  'face',\r\n  'faculty',\r\n  'fade',\r\n  'faint',\r\n  'faith',\r\n  'fall',\r\n  'false',\r\n  'fame',\r\n  'family',\r\n  'famous',\r\n  'fan',\r\n  'fancy',\r\n  'fantasy',\r\n  'farm',\r\n  'fashion',\r\n  'fat',\r\n  'fatal',\r\n  'father',\r\n  'fatigue',\r\n  'fault',\r\n  'favorite',\r\n  'feature',\r\n  'february',\r\n  'federal',\r\n  'fee',\r\n  'feed',\r\n  'feel',\r\n  'female',\r\n  'fence',\r\n  'festival',\r\n  'fetch',\r\n  'fever',\r\n  'few',\r\n  'fiber',\r\n  'fiction',\r\n  'field',\r\n  'figure',\r\n  'file',\r\n  'film',\r\n  'filter',\r\n  'final',\r\n  'find',\r\n  'fine',\r\n  'finger',\r\n  'finish',\r\n  'fire',\r\n  'firm',\r\n  'first',\r\n  'fiscal',\r\n  'fish',\r\n  'fit',\r\n  'fitness',\r\n  'fix',\r\n  'flag',\r\n  'flame',\r\n  'flash',\r\n  'flat',\r\n  'flavor',\r\n  'flee',\r\n  'flight',\r\n  'flip',\r\n  'float',\r\n  'flock',\r\n  'floor',\r\n  'flower',\r\n  'fluid',\r\n  'flush',\r\n  'fly',\r\n  'foam',\r\n  'focus',\r\n  'fog',\r\n  'foil',\r\n  'fold',\r\n  'follow',\r\n  'food',\r\n  'foot',\r\n  'force',\r\n  'forest',\r\n  'forget',\r\n  'fork',\r\n  'fortune',\r\n  'forum',\r\n  'forward',\r\n  'fossil',\r\n  'foster',\r\n  'found',\r\n  'fox',\r\n  'fragile',\r\n  'frame',\r\n  'frequent',\r\n  'fresh',\r\n  'friend',\r\n  'fringe',\r\n  'frog',\r\n  'front',\r\n  'frost',\r\n  'frown',\r\n  'frozen',\r\n  'fruit',\r\n  'fuel',\r\n  'fun',\r\n  'funny',\r\n  'furnace',\r\n  'fury',\r\n  'future',\r\n  'gadget',\r\n  'gain',\r\n  'galaxy',\r\n  'gallery',\r\n  'game',\r\n  'gap',\r\n  'garage',\r\n  'garbage',\r\n  'garden',\r\n  'garlic',\r\n  'garment',\r\n  'gas',\r\n  'gasp',\r\n  'gate',\r\n  'gather',\r\n  'gauge',\r\n  'gaze',\r\n  'general',\r\n  'genius',\r\n  'genre',\r\n  'gentle',\r\n  'genuine',\r\n  'gesture',\r\n  'ghost',\r\n  'giant',\r\n  'gift',\r\n  'giggle',\r\n  'ginger',\r\n  'giraffe',\r\n  'girl',\r\n  'give',\r\n  'glad',\r\n  'glance',\r\n  'glare',\r\n  'glass',\r\n  'glide',\r\n  'glimpse',\r\n  'globe',\r\n  'gloom',\r\n  'glory',\r\n  'glove',\r\n  'glow',\r\n  'glue',\r\n  'goat',\r\n  'goddess',\r\n  'gold',\r\n  'good',\r\n  'goose',\r\n  'gorilla',\r\n  'gospel',\r\n  'gossip',\r\n  'govern',\r\n  'gown',\r\n  'grab',\r\n  'grace',\r\n  'grain',\r\n  'grant',\r\n  'grape',\r\n  'grass',\r\n  'gravity',\r\n  'great',\r\n  'green',\r\n  'grid',\r\n  'grief',\r\n  'grit',\r\n  'grocery',\r\n  'group',\r\n  'grow',\r\n  'grunt',\r\n  'guard',\r\n  'guess',\r\n  'guide',\r\n  'guilt',\r\n  'guitar',\r\n  'gun',\r\n  'gym',\r\n  'habit',\r\n  'hair',\r\n  'half',\r\n  'hammer',\r\n  'hamster',\r\n  'hand',\r\n  'happy',\r\n  'harbor',\r\n  'hard',\r\n  'harsh',\r\n  'harvest',\r\n  'hat',\r\n  'have',\r\n  'hawk',\r\n  'hazard',\r\n  'head',\r\n  'health',\r\n  'heart',\r\n  'heavy',\r\n  'hedgehog',\r\n  'height',\r\n  'hello',\r\n  'helmet',\r\n  'help',\r\n  'hen',\r\n  'hero',\r\n  'hidden',\r\n  'high',\r\n  'hill',\r\n  'hint',\r\n  'hip',\r\n  'hire',\r\n  'history',\r\n  'hobby',\r\n  'hockey',\r\n  'hold',\r\n  'hole',\r\n  'holiday',\r\n  'hollow',\r\n  'home',\r\n  'honey',\r\n  'hood',\r\n  'hope',\r\n  'horn',\r\n  'horror',\r\n  'horse',\r\n  'hospital',\r\n  'host',\r\n  'hotel',\r\n  'hour',\r\n  'hover',\r\n  'hub',\r\n  'huge',\r\n  'human',\r\n  'humble',\r\n  'humor',\r\n  'hundred',\r\n  'hungry',\r\n  'hunt',\r\n  'hurdle',\r\n  'hurry',\r\n  'hurt',\r\n  'husband',\r\n  'hybrid',\r\n  'ice',\r\n  'icon',\r\n  'idea',\r\n  'identify',\r\n  'idle',\r\n  'ignore',\r\n  'ill',\r\n  'illegal',\r\n  'illness',\r\n  'image',\r\n  'imitate',\r\n  'immense',\r\n  'immune',\r\n  'impact',\r\n  'impose',\r\n  'improve',\r\n  'impulse',\r\n  'inch',\r\n  'include',\r\n  'income',\r\n  'increase',\r\n  'index',\r\n  'indicate',\r\n  'indoor',\r\n  'industry',\r\n  'infant',\r\n  'inflict',\r\n  'inform',\r\n  'inhale',\r\n  'inherit',\r\n  'initial',\r\n  'inject',\r\n  'injury',\r\n  'inmate',\r\n  'inner',\r\n  'innocent',\r\n  'input',\r\n  'inquiry',\r\n  'insane',\r\n  'insect',\r\n  'inside',\r\n  'inspire',\r\n  'install',\r\n  'intact',\r\n  'interest',\r\n  'into',\r\n  'invest',\r\n  'invite',\r\n  'involve',\r\n  'iron',\r\n  'island',\r\n  'isolate',\r\n  'issue',\r\n  'item',\r\n  'ivory',\r\n  'jacket',\r\n  'jaguar',\r\n  'jar',\r\n  'jazz',\r\n  'jealous',\r\n  'jeans',\r\n  'jelly',\r\n  'jewel',\r\n  'job',\r\n  'join',\r\n  'joke',\r\n  'journey',\r\n  'joy',\r\n  'judge',\r\n  'juice',\r\n  'jump',\r\n  'jungle',\r\n  'junior',\r\n  'junk',\r\n  'just',\r\n  'kangaroo',\r\n  'keen',\r\n  'keep',\r\n  'ketchup',\r\n  'key',\r\n  'kick',\r\n  'kid',\r\n  'kidney',\r\n  'kind',\r\n  'kingdom',\r\n  'kiss',\r\n  'kit',\r\n  'kitchen',\r\n  'kite',\r\n  'kitten',\r\n  'kiwi',\r\n  'knee',\r\n  'knife',\r\n  'knock',\r\n  'know',\r\n  'lab',\r\n  'label',\r\n  'labor',\r\n  'ladder',\r\n  'lady',\r\n  'lake',\r\n  'lamp',\r\n  'language',\r\n  'laptop',\r\n  'large',\r\n  'later',\r\n  'latin',\r\n  'laugh',\r\n  'laundry',\r\n  'lava',\r\n  'law',\r\n  'lawn',\r\n  'lawsuit',\r\n  'layer',\r\n  'lazy',\r\n  'leader',\r\n  'leaf',\r\n  'learn',\r\n  'leave',\r\n  'lecture',\r\n  'left',\r\n  'leg',\r\n  'legal',\r\n  'legend',\r\n  'leisure',\r\n  'lemon',\r\n  'lend',\r\n  'length',\r\n  'lens',\r\n  'leopard',\r\n  'lesson',\r\n  'letter',\r\n  'level',\r\n  'liar',\r\n  'liberty',\r\n  'library',\r\n  'license',\r\n  'life',\r\n  'lift',\r\n  'light',\r\n  'like',\r\n  'limb',\r\n  'limit',\r\n  'link',\r\n  'lion',\r\n  'liquid',\r\n  'list',\r\n  'little',\r\n  'live',\r\n  'lizard',\r\n  'load',\r\n  'loan',\r\n  'lobster',\r\n  'local',\r\n  'lock',\r\n  'logic',\r\n  'lonely',\r\n  'long',\r\n  'loop',\r\n  'lottery',\r\n  'loud',\r\n  'lounge',\r\n  'love',\r\n  'loyal',\r\n  'lucky',\r\n  'luggage',\r\n  'lumber',\r\n  'lunar',\r\n  'lunch',\r\n  'luxury',\r\n  'lyrics',\r\n  'machine',\r\n  'mad',\r\n  'magic',\r\n  'magnet',\r\n  'maid',\r\n  'mail',\r\n  'main',\r\n  'major',\r\n  'make',\r\n  'mammal',\r\n  'man',\r\n  'manage',\r\n  'mandate',\r\n  'mango',\r\n  'mansion',\r\n  'manual',\r\n  'maple',\r\n  'marble',\r\n  'march',\r\n  'margin',\r\n  'marine',\r\n  'market',\r\n  'marriage',\r\n  'mask',\r\n  'mass',\r\n  'master',\r\n  'match',\r\n  'material',\r\n  'math',\r\n  'matrix',\r\n  'matter',\r\n  'maximum',\r\n  'maze',\r\n  'meadow',\r\n  'mean',\r\n  'measure',\r\n  'meat',\r\n  'mechanic',\r\n  'medal',\r\n  'media',\r\n  'melody',\r\n  'melt',\r\n  'member',\r\n  'memory',\r\n  'mention',\r\n  'menu',\r\n  'mercy',\r\n  'merge',\r\n  'merit',\r\n  'merry',\r\n  'mesh',\r\n  'message',\r\n  'metal',\r\n  'method',\r\n  'middle',\r\n  'midnight',\r\n  'milk',\r\n  'million',\r\n  'mimic',\r\n  'mind',\r\n  'minimum',\r\n  'minor',\r\n  'minute',\r\n  'miracle',\r\n  'mirror',\r\n  'misery',\r\n  'miss',\r\n  'mistake',\r\n  'mix',\r\n  'mixed',\r\n  'mixture',\r\n  'mobile',\r\n  'model',\r\n  'modify',\r\n  'mom',\r\n  'moment',\r\n  'monitor',\r\n  'monkey',\r\n  'monster',\r\n  'month',\r\n  'moon',\r\n  'moral',\r\n  'more',\r\n  'morning',\r\n  'mosquito',\r\n  'mother',\r\n  'motion',\r\n  'motor',\r\n  'mountain',\r\n  'mouse',\r\n  'move',\r\n  'movie',\r\n  'much',\r\n  'muffin',\r\n  'mule',\r\n  'multiply',\r\n  'muscle',\r\n  'museum',\r\n  'mushroom',\r\n  'music',\r\n  'must',\r\n  'mutual',\r\n  'myself',\r\n  'mystery',\r\n  'myth',\r\n  'naive',\r\n  'name',\r\n  'napkin',\r\n  'narrow',\r\n  'nasty',\r\n  'nation',\r\n  'nature',\r\n  'near',\r\n  'neck',\r\n  'need',\r\n  'negative',\r\n  'neglect',\r\n  'neither',\r\n  'nephew',\r\n  'nerve',\r\n  'nest',\r\n  'net',\r\n  'network',\r\n  'neutral',\r\n  'never',\r\n  'news',\r\n  'next',\r\n  'nice',\r\n  'night',\r\n  'noble',\r\n  'noise',\r\n  'nominee',\r\n  'noodle',\r\n  'normal',\r\n  'north',\r\n  'nose',\r\n  'notable',\r\n  'note',\r\n  'nothing',\r\n  'notice',\r\n  'novel',\r\n  'now',\r\n  'nuclear',\r\n  'number',\r\n  'nurse',\r\n  'nut',\r\n  'oak',\r\n  'obey',\r\n  'object',\r\n  'oblige',\r\n  'obscure',\r\n  'observe',\r\n  'obtain',\r\n  'obvious',\r\n  'occur',\r\n  'ocean',\r\n  'october',\r\n  'odor',\r\n  'off',\r\n  'offer',\r\n  'office',\r\n  'often',\r\n  'oil',\r\n  'okay',\r\n  'old',\r\n  'olive',\r\n  'olympic',\r\n  'omit',\r\n  'once',\r\n  'one',\r\n  'onion',\r\n  'online',\r\n  'only',\r\n  'open',\r\n  'opera',\r\n  'opinion',\r\n  'oppose',\r\n  'option',\r\n  'orange',\r\n  'orbit',\r\n  'orchard',\r\n  'order',\r\n  'ordinary',\r\n  'organ',\r\n  'orient',\r\n  'original',\r\n  'orphan',\r\n  'ostrich',\r\n  'other',\r\n  'outdoor',\r\n  'outer',\r\n  'output',\r\n  'outside',\r\n  'oval',\r\n  'oven',\r\n  'over',\r\n  'own',\r\n  'owner',\r\n  'oxygen',\r\n  'oyster',\r\n  'ozone',\r\n  'pact',\r\n  'paddle',\r\n  'page',\r\n  'pair',\r\n  'palace',\r\n  'palm',\r\n  'panda',\r\n  'panel',\r\n  'panic',\r\n  'panther',\r\n  'paper',\r\n  'parade',\r\n  'parent',\r\n  'park',\r\n  'parrot',\r\n  'party',\r\n  'pass',\r\n  'patch',\r\n  'path',\r\n  'patient',\r\n  'patrol',\r\n  'pattern',\r\n  'pause',\r\n  'pave',\r\n  'payment',\r\n  'peace',\r\n  'peanut',\r\n  'pear',\r\n  'peasant',\r\n  'pelican',\r\n  'pen',\r\n  'penalty',\r\n  'pencil',\r\n  'people',\r\n  'pepper',\r\n  'perfect',\r\n  'permit',\r\n  'person',\r\n  'pet',\r\n  'phone',\r\n  'photo',\r\n  'phrase',\r\n  'physical',\r\n  'piano',\r\n  'picnic',\r\n  'picture',\r\n  'piece',\r\n  'pig',\r\n  'pigeon',\r\n  'pill',\r\n  'pilot',\r\n  'pink',\r\n  'pioneer',\r\n  'pipe',\r\n  'pistol',\r\n  'pitch',\r\n  'pizza',\r\n  'place',\r\n  'planet',\r\n  'plastic',\r\n  'plate',\r\n  'play',\r\n  'please',\r\n  'pledge',\r\n  'pluck',\r\n  'plug',\r\n  'plunge',\r\n  'poem',\r\n  'poet',\r\n  'point',\r\n  'polar',\r\n  'pole',\r\n  'police',\r\n  'pond',\r\n  'pony',\r\n  'pool',\r\n  'popular',\r\n  'portion',\r\n  'position',\r\n  'possible',\r\n  'post',\r\n  'potato',\r\n  'pottery',\r\n  'poverty',\r\n  'powder',\r\n  'power',\r\n  'practice',\r\n  'praise',\r\n  'predict',\r\n  'prefer',\r\n  'prepare',\r\n  'present',\r\n  'pretty',\r\n  'prevent',\r\n  'price',\r\n  'pride',\r\n  'primary',\r\n  'print',\r\n  'priority',\r\n  'prison',\r\n  'private',\r\n  'prize',\r\n  'problem',\r\n  'process',\r\n  'produce',\r\n  'profit',\r\n  'program',\r\n  'project',\r\n  'promote',\r\n  'proof',\r\n  'property',\r\n  'prosper',\r\n  'protect',\r\n  'proud',\r\n  'provide',\r\n  'public',\r\n  'pudding',\r\n  'pull',\r\n  'pulp',\r\n  'pulse',\r\n  'pumpkin',\r\n  'punch',\r\n  'pupil',\r\n  'puppy',\r\n  'purchase',\r\n  'purity',\r\n  'purpose',\r\n  'purse',\r\n  'push',\r\n  'put',\r\n  'puzzle',\r\n  'pyramid',\r\n  'quality',\r\n  'quantum',\r\n  'quarter',\r\n  'question',\r\n  'quick',\r\n  'quit',\r\n  'quiz',\r\n  'quote',\r\n  'rabbit',\r\n  'raccoon',\r\n  'race',\r\n  'rack',\r\n  'radar',\r\n  'radio',\r\n  'rail',\r\n  'rain',\r\n  'raise',\r\n  'rally',\r\n  'ramp',\r\n  'ranch',\r\n  'random',\r\n  'range',\r\n  'rapid',\r\n  'rare',\r\n  'rate',\r\n  'rather',\r\n  'raven',\r\n  'raw',\r\n  'razor',\r\n  'ready',\r\n  'real',\r\n  'reason',\r\n  'rebel',\r\n  'rebuild',\r\n  'recall',\r\n  'receive',\r\n  'recipe',\r\n  'record',\r\n  'recycle',\r\n  'reduce',\r\n  'reflect',\r\n  'reform',\r\n  'refuse',\r\n  'region',\r\n  'regret',\r\n  'regular',\r\n  'reject',\r\n  'relax',\r\n  'release',\r\n  'relief',\r\n  'rely',\r\n  'remain',\r\n  'remember',\r\n  'remind',\r\n  'remove',\r\n  'render',\r\n  'renew',\r\n  'rent',\r\n  'reopen',\r\n  'repair',\r\n  'repeat',\r\n  'replace',\r\n  'report',\r\n  'require',\r\n  'rescue',\r\n  'resemble',\r\n  'resist',\r\n  'resource',\r\n  'response',\r\n  'result',\r\n  'retire',\r\n  'retreat',\r\n  'return',\r\n  'reunion',\r\n  'reveal',\r\n  'review',\r\n  'reward',\r\n  'rhythm',\r\n  'rib',\r\n  'ribbon',\r\n  'rice',\r\n  'rich',\r\n  'ride',\r\n  'ridge',\r\n  'rifle',\r\n  'right',\r\n  'rigid',\r\n  'ring',\r\n  'riot',\r\n  'ripple',\r\n  'risk',\r\n  'ritual',\r\n  'rival',\r\n  'river',\r\n  'road',\r\n  'roast',\r\n  'robot',\r\n  'robust',\r\n  'rocket',\r\n  'romance',\r\n  'roof',\r\n  'rookie',\r\n  'room',\r\n  'rose',\r\n  'rotate',\r\n  'rough',\r\n  'round',\r\n  'route',\r\n  'royal',\r\n  'rubber',\r\n  'rude',\r\n  'rug',\r\n  'rule',\r\n  'run',\r\n  'runway',\r\n  'rural',\r\n  'sad',\r\n  'saddle',\r\n  'sadness',\r\n  'safe',\r\n  'sail',\r\n  'salad',\r\n  'salmon',\r\n  'salon',\r\n  'salt',\r\n  'salute',\r\n  'same',\r\n  'sample',\r\n  'sand',\r\n  'satisfy',\r\n  'satoshi',\r\n  'sauce',\r\n  'sausage',\r\n  'save',\r\n  'say',\r\n  'scale',\r\n  'scan',\r\n  'scare',\r\n  'scatter',\r\n  'scene',\r\n  'scheme',\r\n  'school',\r\n  'science',\r\n  'scissors',\r\n  'scorpion',\r\n  'scout',\r\n  'scrap',\r\n  'screen',\r\n  'script',\r\n  'scrub',\r\n  'sea',\r\n  'search',\r\n  'season',\r\n  'seat',\r\n  'second',\r\n  'secret',\r\n  'section',\r\n  'security',\r\n  'seed',\r\n  'seek',\r\n  'segment',\r\n  'select',\r\n  'sell',\r\n  'seminar',\r\n  'senior',\r\n  'sense',\r\n  'sentence',\r\n  'series',\r\n  'service',\r\n  'session',\r\n  'settle',\r\n  'setup',\r\n  'seven',\r\n  'shadow',\r\n  'shaft',\r\n  'shallow',\r\n  'share',\r\n  'shed',\r\n  'shell',\r\n  'sheriff',\r\n  'shield',\r\n  'shift',\r\n  'shine',\r\n  'ship',\r\n  'shiver',\r\n  'shock',\r\n  'shoe',\r\n  'shoot',\r\n  'shop',\r\n  'short',\r\n  'shoulder',\r\n  'shove',\r\n  'shrimp',\r\n  'shrug',\r\n  'shuffle',\r\n  'shy',\r\n  'sibling',\r\n  'sick',\r\n  'side',\r\n  'siege',\r\n  'sight',\r\n  'sign',\r\n  'silent',\r\n  'silk',\r\n  'silly',\r\n  'silver',\r\n  'similar',\r\n  'simple',\r\n  'since',\r\n  'sing',\r\n  'siren',\r\n  'sister',\r\n  'situate',\r\n  'six',\r\n  'size',\r\n  'skate',\r\n  'sketch',\r\n  'ski',\r\n  'skill',\r\n  'skin',\r\n  'skirt',\r\n  'skull',\r\n  'slab',\r\n  'slam',\r\n  'sleep',\r\n  'slender',\r\n  'slice',\r\n  'slide',\r\n  'slight',\r\n  'slim',\r\n  'slogan',\r\n  'slot',\r\n  'slow',\r\n  'slush',\r\n  'small',\r\n  'smart',\r\n  'smile',\r\n  'smoke',\r\n  'smooth',\r\n  'snack',\r\n  'snake',\r\n  'snap',\r\n  'sniff',\r\n  'snow',\r\n  'soap',\r\n  'soccer',\r\n  'social',\r\n  'sock',\r\n  'soda',\r\n  'soft',\r\n  'solar',\r\n  'soldier',\r\n  'solid',\r\n  'solution',\r\n  'solve',\r\n  'someone',\r\n  'song',\r\n  'soon',\r\n  'sorry',\r\n  'sort',\r\n  'soul',\r\n  'sound',\r\n  'soup',\r\n  'source',\r\n  'south',\r\n  'space',\r\n  'spare',\r\n  'spatial',\r\n  'spawn',\r\n  'speak',\r\n  'special',\r\n  'speed',\r\n  'spell',\r\n  'spend',\r\n  'sphere',\r\n  'spice',\r\n  'spider',\r\n  'spike',\r\n  'spin',\r\n  'spirit',\r\n  'split',\r\n  'spoil',\r\n  'sponsor',\r\n  'spoon',\r\n  'sport',\r\n  'spot',\r\n  'spray',\r\n  'spread',\r\n  'spring',\r\n  'spy',\r\n  'square',\r\n  'squeeze',\r\n  'squirrel',\r\n  'stable',\r\n  'stadium',\r\n  'staff',\r\n  'stage',\r\n  'stairs',\r\n  'stamp',\r\n  'stand',\r\n  'start',\r\n  'state',\r\n  'stay',\r\n  'steak',\r\n  'steel',\r\n  'stem',\r\n  'step',\r\n  'stereo',\r\n  'stick',\r\n  'still',\r\n  'sting',\r\n  'stock',\r\n  'stomach',\r\n  'stone',\r\n  'stool',\r\n  'story',\r\n  'stove',\r\n  'strategy',\r\n  'street',\r\n  'strike',\r\n  'strong',\r\n  'struggle',\r\n  'student',\r\n  'stuff',\r\n  'stumble',\r\n  'style',\r\n  'subject',\r\n  'submit',\r\n  'subway',\r\n  'success',\r\n  'such',\r\n  'sudden',\r\n  'suffer',\r\n  'sugar',\r\n  'suggest',\r\n  'suit',\r\n  'summer',\r\n  'sun',\r\n  'sunny',\r\n  'sunset',\r\n  'super',\r\n  'supply',\r\n  'supreme',\r\n  'sure',\r\n  'surface',\r\n  'surge',\r\n  'surprise',\r\n  'surround',\r\n  'survey',\r\n  'suspect',\r\n  'sustain',\r\n  'swallow',\r\n  'swamp',\r\n  'swap',\r\n  'swarm',\r\n  'swear',\r\n  'sweet',\r\n  'swift',\r\n  'swim',\r\n  'swing',\r\n  'switch',\r\n  'sword',\r\n  'symbol',\r\n  'symptom',\r\n  'syrup',\r\n  'system',\r\n  'table',\r\n  'tackle',\r\n  'tag',\r\n  'tail',\r\n  'talent',\r\n  'talk',\r\n  'tank',\r\n  'tape',\r\n  'target',\r\n  'task',\r\n  'taste',\r\n  'tattoo',\r\n  'taxi',\r\n  'teach',\r\n  'team',\r\n  'tell',\r\n  'ten',\r\n  'tenant',\r\n  'tennis',\r\n  'tent',\r\n  'term',\r\n  'test',\r\n  'text',\r\n  'thank',\r\n  'that',\r\n  'theme',\r\n  'then',\r\n  'theory',\r\n  'there',\r\n  'they',\r\n  'thing',\r\n  'this',\r\n  'thought',\r\n  'three',\r\n  'thrive',\r\n  'throw',\r\n  'thumb',\r\n  'thunder',\r\n  'ticket',\r\n  'tide',\r\n  'tiger',\r\n  'tilt',\r\n  'timber',\r\n  'time',\r\n  'tiny',\r\n  'tip',\r\n  'tired',\r\n  'tissue',\r\n  'title',\r\n  'toast',\r\n  'tobacco',\r\n  'today',\r\n  'toddler',\r\n  'toe',\r\n  'together',\r\n  'toilet',\r\n  'token',\r\n  'tomato',\r\n  'tomorrow',\r\n  'tone',\r\n  'tongue',\r\n  'tonight',\r\n  'tool',\r\n  'tooth',\r\n  'top',\r\n  'topic',\r\n  'topple',\r\n  'torch',\r\n  'tornado',\r\n  'tortoise',\r\n  'toss',\r\n  'total',\r\n  'tourist',\r\n  'toward',\r\n  'tower',\r\n  'town',\r\n  'toy',\r\n  'track',\r\n  'trade',\r\n  'traffic',\r\n  'tragic',\r\n  'train',\r\n  'transfer',\r\n  'trap',\r\n  'trash',\r\n  'travel',\r\n  'tray',\r\n  'treat',\r\n  'tree',\r\n  'trend',\r\n  'trial',\r\n  'tribe',\r\n  'trick',\r\n  'trigger',\r\n  'trim',\r\n  'trip',\r\n  'trophy',\r\n  'trouble',\r\n  'truck',\r\n  'true',\r\n  'truly',\r\n  'trumpet',\r\n  'trust',\r\n  'truth',\r\n  'try',\r\n  'tube',\r\n  'tuition',\r\n  'tumble',\r\n  'tuna',\r\n  'tunnel',\r\n  'turkey',\r\n  'turn',\r\n  'turtle',\r\n  'twelve',\r\n  'twenty',\r\n  'twice',\r\n  'twin',\r\n  'twist',\r\n  'two',\r\n  'type',\r\n  'typical',\r\n  'ugly',\r\n  'umbrella',\r\n  'unable',\r\n  'unaware',\r\n  'uncle',\r\n  'uncover',\r\n  'under',\r\n  'undo',\r\n  'unfair',\r\n  'unfold',\r\n  'unhappy',\r\n  'uniform',\r\n  'unique',\r\n  'unit',\r\n  'universe',\r\n  'unknown',\r\n  'unlock',\r\n  'until',\r\n  'unusual',\r\n  'unveil',\r\n  'update',\r\n  'upgrade',\r\n  'uphold',\r\n  'upon',\r\n  'upper',\r\n  'upset',\r\n  'urban',\r\n  'urge',\r\n  'usage',\r\n  'use',\r\n  'used',\r\n  'useful',\r\n  'useless',\r\n  'usual',\r\n  'utility',\r\n  'vacant',\r\n  'vacuum',\r\n  'vague',\r\n  'valid',\r\n  'valley',\r\n  'valve',\r\n  'van',\r\n  'vanish',\r\n  'vapor',\r\n  'various',\r\n  'vast',\r\n  'vault',\r\n  'vehicle',\r\n  'velvet',\r\n  'vendor',\r\n  'venture',\r\n  'venue',\r\n  'verb',\r\n  'verify',\r\n  'version',\r\n  'very',\r\n  'vessel',\r\n  'veteran',\r\n  'viable',\r\n  'vibrant',\r\n  'vicious',\r\n  'victory',\r\n  'video',\r\n  'view',\r\n  'village',\r\n  'vintage',\r\n  'violin',\r\n  'virtual',\r\n  'virus',\r\n  'visa',\r\n  'visit',\r\n  'visual',\r\n  'vital',\r\n  'vivid',\r\n  'vocal',\r\n  'voice',\r\n  'void',\r\n  'volcano',\r\n  'volume',\r\n  'vote',\r\n  'voyage',\r\n  'wage',\r\n  'wagon',\r\n  'wait',\r\n  'walk',\r\n  'wall',\r\n  'walnut',\r\n  'want',\r\n  'warfare',\r\n  'warm',\r\n  'warrior',\r\n  'wash',\r\n  'wasp',\r\n  'waste',\r\n  'water',\r\n  'wave',\r\n  'way',\r\n  'wealth',\r\n  'weapon',\r\n  'wear',\r\n  'weasel',\r\n  'weather',\r\n  'web',\r\n  'wedding',\r\n  'weekend',\r\n  'weird',\r\n  'welcome',\r\n  'west',\r\n  'wet',\r\n  'whale',\r\n  'what',\r\n  'wheat',\r\n  'wheel',\r\n  'when',\r\n  'where',\r\n  'whip',\r\n  'whisper',\r\n  'wide',\r\n  'width',\r\n  'wife',\r\n  'wild',\r\n  'will',\r\n  'win',\r\n  'window',\r\n  'wine',\r\n  'wing',\r\n  'wink',\r\n  'winner',\r\n  'winter',\r\n  'wire',\r\n  'wisdom',\r\n  'wise',\r\n  'wish',\r\n  'witness',\r\n  'wolf',\r\n  'woman',\r\n  'wonder',\r\n  'wood',\r\n  'wool',\r\n  'word',\r\n  'work',\r\n  'world',\r\n  'worry',\r\n  'worth',\r\n  'wrap',\r\n  'wreck',\r\n  'wrestle',\r\n  'wrist',\r\n  'write',\r\n  'wrong',\r\n  'yard',\r\n  'year',\r\n  'yellow',\r\n  'you',\r\n  'young',\r\n  'youth',\r\n  'zebra',\r\n  'zero',\r\n  'zone',\r\n  'zoo',\r\n];\r\nexport default wordlist;\r\n","<script>\n  import * as utils from \"./utils.js\";\n  const api = \"https://api.youtubeconnect.ameyathakur.com\";\n  let connected = false;\n  let state;\n  let mnemonicBuffer = \"\";\n  let token = window.location.hash.substr(1);\n  let timer;\n\n  $: if (state) {\n    debounce(pushUpdate, 15);\n  }\n\n  $: if (token !== \"\") {\n    console.log(\"running fetch\");\n    console.log(token);\n    fetch(api + \"/get/\" + token)\n      .then(response => {\n        if (response.status !== 200) {\n          connected = false;\n          state = null;\n          token = \"\";\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n\n        // Examine the text in the response\n        response.json().then(data => {\n          state = data;\n          connected = true;\n        });\n      })\n      .catch(err => {\n        connected = false;\n        state = null;\n        console.log(\"Fetch Error : \", err);\n        return;\n      });\n  }\n\n  const pushUpdate = () => {\n    fetch(api + \"/update/\" + token, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(state)\n    })\n      .then(response => {\n        if (response.status !== 200) {\n          connected = false;\n          state = null;\n          token = \"\";\n          console.log(\n            \"Looks like there was a problem. Status Code: \" + response.status\n          );\n          return;\n        }\n      })\n      .catch(err => {\n        connected = false;\n        state = null;\n        token = \"\";\n        console.log(\"Fetch Error : \", err);\n        return;\n      });\n\n    if (state && state.action !== -1) {\n      state.action = -1;\n    }\n  };\n\n  const processMnemonic = () => {\n    var b64 = utils.demnemonic(mnemonicBuffer);\n    if (b64 != \"\") {\n      token = b64;\n    }\n  };\n\n  const handleKeydown = e => {\n    if (e.keyCode === 13) {\n      processMnemonic();\n    }\n  };\n\n  const updateHashToken = () => {\n    var temp = window.location.hash.substr(1);\n    console.log(\"hash token:\", temp);\n    if (temp.length < 16) {\n      temp += \"=\";\n    }\n    console.log(temp);\n  };\n\n  const playpause = () => {\n    state.paused === true ? (state.paused = false) : (state.paused = true);\n  };\n\n  const mute = () => {\n    state.mute === true ? (state.mute = false) : (state.mute = true);\n  };\n\n  const next = () => {\n    state.action = 1;\n  };\n\n  const prev = () => {\n    state.action = 0;\n  };\n\n  const skipbackward = () => {\n    state.action = 2;\n  };\n\n  const skipforward = () => {\n    state.action = 3;\n  };\n\n  const debounce = (func, delay) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func();\n    }, delay);\n  };\n</script>\n\n<style>\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown} on:hashchange={updateHashToken} />\n\n<main class=\"container\">\n  <div class=\"header\">\n    <a href=\"https://youtubeconnect.ameyathakur.com/\">Youtube Connect</a>\n    <a href=\"https://youtubeconnect.ameyathakur.com/\">Extension</a>\n  </div>\n  <div style=\"height: 25vh\" />\n  <div class=\"content\">\n    {#if !connected}\n      <input\n        class=\"long-input\"\n        bind:value={mnemonicBuffer}\n        type=\"text\"\n        placeholder=\"Eight word mnemonic\" />\n      <button on:click={processMnemonic}>Connect</button>\n    {/if}\n\n    {#if connected}\n      <div class=\"panel\">\n        <div class=\"controls\">\n          <button on:click={skipbackward}>Skip -10</button>\n\n          <button on:click={playpause}>Play/Pause</button>\n          <button on:click={skipforward}>Skip +30</button>\n\n        </div>\n        <div class=\"controls\">\n          <button on:click={mute}>Mute</button>\n          <input type=\"range\" bind:value={state.volume} min=\"0\" max=\"100\" />\n        </div>\n\n        <div\n          style=\"display: flex; flex-direction: row; justify-content:\n          space-between;\">\n          <button on:click={prev}>Previous</button>\n          <button on:click={next}>Next</button>\n        </div>\n      </div>\n    {/if}\n  </div>\n</main>\n","import wordlist from './wordlist.js';\r\nexport function demnemonic(tokenString) {\r\n  let wordArray = tokenString.split(' ');\r\n  let byteString = '';\r\n  let result = '';\r\n  if (wordArray.length < 8) return '';\r\n  wordArray.forEach((word) => {\r\n    wordlist.find((val, index) => {\r\n      if (val === word) {\r\n        byteString += index.toString(2).padStart(11, '0');\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  });\r\n\r\n  for (var i = 0; i < 11; i++) {\r\n    result += String.fromCharCode(parseInt(byteString.slice(0, 8), 2));\r\n    byteString = byteString.slice(8);\r\n  }\r\n\r\n  return btoa(result).replace(/\\//g, '_').replace(/\\+/g, '-');\r\n}\r\n\r\nexport function handleGetResponse(response) {\r\n  if (response.status !== 200) {\r\n    connected = false;\r\n    state = {};\r\n    console.log(\r\n      'Looks like there was a problem. Status Code: ' + response.status\r\n    );\r\n    return;\r\n  }\r\n\r\n  // Examine the text in the response\r\n  response.json().then((data) => {\r\n    state = data;\r\n    connected = true;\r\n  });\r\n}\r\n","import App from './App.svelte';\nimport './utils.js';\n\nconst app = new App({\n  target: document.body,\n  props: {},\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","space","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","globals","window","globalThis","global","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_mount","on_destroy","context","Map","callbacks","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","wordlist","volume","api","state","timer","connected","mnemonicBuffer","token","location","hash","substr","pushUpdate","fetch","method","headers","Content-Type","body","JSON","stringify","response","status","console","log","catch","err","action","processMnemonic","b64","tokenString","wordArray","split","byteString","result","word","find","val","index","toString","padStart","String","fromCharCode","parseInt","slice","btoa","replace","utils.demnemonic","func","delay","json","clearTimeout","setTimeout","e","keyCode","temp","paused","mute","undefined","[object Object]","detaching","d","destroy_component","this","$destroy","type","indexOf","splice"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAiJhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAuBlC,SAASG,IACL,OAJUC,EAIE,IAHLH,SAASI,eAAeD,GADnC,IAAcA,EASd,SAASE,EAAOf,EAAMgB,EAAOC,EAASC,GAElC,OADAlB,EAAKmB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMlB,EAAKoB,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAKrB,EAAMsB,EAAWC,GACd,MAATA,EACAvB,EAAKwB,gBAAgBF,GAChBtB,EAAKyB,aAAaH,KAAeC,GACtCvB,EAAK0B,aAAaJ,EAAWC,GAqGrC,SAASI,EAAgBC,EAAOL,GAC5BK,EAAML,MAAiB,MAATA,EAAgB,GAAKA,EAUvC,SAASM,EAAU7B,EAAM8B,EAAKP,EAAOQ,GACjC/B,EAAKgC,MAAMC,YAAYH,EAAKP,EAAOQ,EAAY,YAAc,IA2PjE,IAAIG,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAiDxB,MAAMC,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB3D,GACzBqD,EAAiBO,KAAK5D,GAK1B,IAAI6D,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASC,IACL,IAAIH,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAII,EAAI,EAAGA,EAAId,EAAiBe,OAAQD,GAAK,EAAG,CACjD,MAAMf,EAAYC,EAAiBc,GACnChB,EAAsBC,GACtBiB,EAAOjB,EAAUkB,IAGrB,IADAjB,EAAiBe,OAAS,EACnBd,EAAkBc,QACrBd,EAAkBiB,KAAlBjB,GAIJ,IAAK,IAAIa,EAAI,EAAGA,EAAIZ,EAAiBa,OAAQD,GAAK,EAAG,CACjD,MAAMK,EAAWjB,EAAiBY,GAC7BH,EAAeS,IAAID,KAEpBR,EAAeU,IAAIF,GACnBA,KAGRjB,EAAiBa,OAAS,QACrBf,EAAiBe,QAC1B,KAAOZ,EAAgBY,QACnBZ,EAAgBe,KAAhBf,GAEJI,GAAmB,EACnBG,GAAW,EACXC,EAAeW,SAEnB,SAASN,EAAOC,GACZ,GAAoB,OAAhBA,EAAGM,SAAmB,CACtBN,EAAGD,SACH/D,EAAQgE,EAAGO,eACX,MAAMC,EAAQR,EAAGQ,MACjBR,EAAGQ,MAAQ,EAAE,GACbR,EAAGM,UAAYN,EAAGM,SAASG,EAAET,EAAGU,IAAKF,GACrCR,EAAGW,aAAazE,QAAQqD,IAiBhC,MAAMqB,EAAW,IAAIjB,IAwUrB,MAAMkB,EAA6B,oBAAXC,OAClBA,OACsB,oBAAfC,WACHA,WACAC,OAgUV,SAASC,EAAWnC,EAAWe,IACI,IAA3Bf,EAAUkB,GAAGQ,MAAM,KACnBzB,EAAiBS,KAAKV,GA1tBrBQ,IACDA,GAAmB,EACnBH,EAAiB+B,KAAKtB,IA0tBtBd,EAAUkB,GAAGQ,MAAMW,KAAK,IAE5BrC,EAAUkB,GAAGQ,MAAOX,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASuB,EAAKtC,EAAWlB,EAASyD,EAAUC,EAAiBC,EAAWC,EAAOhB,EAAQ,EAAE,IACrF,MAAMiB,EAAmB7C,EACzBC,EAAsBC,GACtB,MAAM4C,EAAc9D,EAAQ4D,OAAS,GAC/BxB,EAAKlB,EAAUkB,GAAK,CACtBM,SAAU,KACVI,IAAK,KAELc,MAAAA,EACAzB,OAAQrE,EACR6F,UAAAA,EACAI,MAAO9F,IAEP+F,SAAU,GACVC,WAAY,GACZtB,cAAe,GACfI,aAAc,GACdmB,QAAS,IAAIC,IAAIN,EAAmBA,EAAiBzB,GAAG8B,QAAU,IAElEE,UAAWnG,IACX2E,MAAAA,GAEJ,IAAIyB,GAAQ,EAkBZ,GAjBAjC,EAAGU,IAAMW,EACHA,EAASvC,EAAW4C,EAAa,CAAC7B,EAAGqC,KAAQC,KAC3C,MAAMlE,EAAQkE,EAAKrC,OAASqC,EAAK,GAAKD,EAOtC,OANIlC,EAAGU,KAAOa,EAAUvB,EAAGU,IAAIb,GAAIG,EAAGU,IAAIb,GAAK5B,KACvC+B,EAAG2B,MAAM9B,IACTG,EAAG2B,MAAM9B,GAAG5B,GACZgE,GACAhB,EAAWnC,EAAWe,IAEvBqC,IAET,GACNlC,EAAGD,SACHkC,GAAQ,EACRjG,EAAQgE,EAAGO,eAEXP,EAAGM,WAAWgB,GAAkBA,EAAgBtB,EAAGU,KAC/C9C,EAAQnB,OAAQ,CAChB,GAAImB,EAAQwE,QAAS,CACjB,MAAMC,EArnClB,SAAkBnF,GACd,OAAOoF,MAAMC,KAAKrF,EAAQsF,YAonCJC,CAAS7E,EAAQnB,QAE/BuD,EAAGM,UAAYN,EAAGM,SAASoC,EAAEL,GAC7BA,EAAMnG,QAAQa,QAIdiD,EAAGM,UAAYN,EAAGM,SAASqC,IAE3B/E,EAAQgF,SAxrBGC,EAyrBG/D,EAAUkB,GAAGM,WAxrBtBuC,EAAMhD,IACfe,EAASkC,OAAOD,GAChBA,EAAMhD,EAAEkD,KA6lBhB,SAAyBjE,EAAWrC,EAAQI,GACxC,MAAMyD,SAAEA,EAAQsB,SAAEA,EAAQC,WAAEA,EAAUlB,aAAEA,GAAiB7B,EAAUkB,GACnEM,GAAYA,EAAS0C,EAAEvG,EAAQI,GAE/B0C,EAAoB,KAChB,MAAM0D,EAAiBrB,EAASsB,IAAIvH,GAAKwH,OAAOhH,GAC5C0F,EACAA,EAAWrC,QAAQyD,GAKnBjH,EAAQiH,GAEZnE,EAAUkB,GAAG4B,SAAW,KAE5BjB,EAAazE,QAAQqD,GA0EjB6D,CAAgBtE,EAAWlB,EAAQnB,OAAQmB,EAAQf,QACnD+C,IA3rBR,IAAuBiD,EAAOE,EA6rB1BlE,EAAsB4C,GCv7C1B,MAAM4B,EAAW,CACf,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,oOC52DkB3C,8DAGIA,oCAHJA,UAAAA,wuBAiBsBA,KAAM4C,8DARpB5C,mBAEAA,kBACAA,mBAIAA,yDAOAA,kBACAA,8BAPcA,KAAM4C,yEApBtC5C,aASDA,wdAlBkBA,uBAA8BA,uBAS/CA,2DASDA,wHAxJD6C,EAAM,mEAERC,EAGAC,EAJAC,GAAY,EAEZC,EAAiB,GACjBC,EAAQ9C,OAAO+C,SAASC,KAAKC,OAAO,SAoClCC,OACJC,MAAMV,EAAM,WAAaK,GACvBM,OAAQ,MACRC,SACEC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUf,KAEpBtC,KAAKsD,OACoB,MAApBA,EAASC,kBACXf,GAAY,OACZF,EAAQ,WACRI,EAAQ,SACRc,QAAQC,IACN,gDAAkDH,EAASC,UAKhEG,MAAMC,QACLnB,GAAY,OACZF,EAAQ,WACRI,EAAQ,IACRc,QAAQC,IAAI,iBAAkBE,KAI9BrB,IAA2B,IAAlBA,EAAMsB,YACjBtB,EAAMsB,QAAU,MAIdC,WACAC,EC1ED,SAAoBC,GACzB,IAAIC,EAAYD,EAAYE,MAAM,KAC9BC,EAAa,GACbC,EAAS,GACb,GAAIH,EAAUpF,OAAS,EAAG,MAAO,GACjCoF,EAAUhJ,QAASoJ,IACjBjC,EAASkC,KAAK,CAACC,EAAKC,IACdD,IAAQF,IACVF,GAAcK,EAAMC,SAAS,GAAGC,SAAS,GAAI,MACtC,MAMb,IAAK,IAAI9F,EAAI,EAAGA,EAAI,GAAIA,IACtBwF,GAAUO,OAAOC,aAAaC,SAASV,EAAWW,MAAM,EAAG,GAAI,IAC/DX,EAAaA,EAAWW,MAAM,GAGhC,OAAOC,KAAKX,GAAQY,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KDsD3CC,CAAiBvC,GAChB,IAAPqB,QACFpB,EAAQoB,gCA2CMmB,EAAMC,oBA3GP,KAAVxC,IACLc,QAAQC,IAAI,iBACZD,QAAQC,IAAIf,GACZK,MAAMV,EAAM,QAAUK,GACnB1C,KAAKsD,OACoB,MAApBA,EAASC,kBACXf,GAAY,OACZF,EAAQ,WACRI,EAAQ,SACRc,QAAQC,IACN,gDAAkDH,EAASC,QAM/DD,EAAS6B,OAAOnF,KAAK3D,QACnBiG,EAAQjG,OACRmG,GAAY,OAGfkB,MAAMC,QACLnB,GAAY,OACZF,EAAQ,MACRkB,QAAQC,IAAI,iBAAkBE,oBA5B7BrB,IA+GW2C,EA9GPnC,EA8GaoC,EA9GD,GA+GrBE,aAAa7C,GACbA,EAAQ8C,gBACNJ,KACCC,cA3CiBI,IACF,KAAdA,EAAEC,SACJ1B,cAKE2B,EAAO5F,OAAO+C,SAASC,KAAKC,OAAO,GACvCW,QAAQC,IAAI,cAAe+B,GACvBA,EAAK5G,OAAS,KAChB4G,GAAQ,KAEVhC,QAAQC,IAAI+B,UAIK,IAAjBlD,EAAMmD,WAAmBnD,EAAMmD,QAAS,SAAUnD,EAAMmD,QAAS,YAIlD,IAAfnD,EAAMoD,SAAiBpD,EAAMoD,MAAO,SAAUpD,EAAMoD,MAAO,eAI3DpD,EAAMsB,OAAS,eAIftB,EAAMsB,OAAS,eAIftB,EAAMsB,OAAS,eAIftB,EAAMsB,OAAS,iBA+BCnB,gCFsJpB,IAAmB1F,EErIuBuF,EAAMF,OFsI3B,MADFrF,mBACO4I,GAAa5I,0BIxS3B,kBJ09CZ,MACI6I,YAlHJ,SAA2BhI,EAAWiI,GAClC,MAAM/G,EAAKlB,EAAUkB,GACD,OAAhBA,EAAGM,WACHtE,EAAQgE,EAAG6B,YACX7B,EAAGM,UAAYN,EAAGM,SAAS0G,EAAED,GAG7B/G,EAAG6B,WAAa7B,EAAGM,SAAW,KAC9BN,EAAGU,IAAM,IA2GTuG,CAAkBC,KAAM,GACxBA,KAAKC,SAAWzL,EAEpBoL,IAAIM,EAAMlH,GACN,MAAM8B,EAAakF,KAAKlH,GAAGgC,UAAUoF,KAAUF,KAAKlH,GAAGgC,UAAUoF,GAAQ,IAEzE,OADApF,EAAUxC,KAAKU,GACR,KACH,MAAMuF,EAAQzD,EAAUqF,QAAQnH,IACjB,IAAXuF,GACAzD,EAAUsF,OAAO7B,EAAO,IAGpCqB,sDIx+CgB,CAClBrK,OAAQW,SAASiH,KACjB7C,MAAO"}